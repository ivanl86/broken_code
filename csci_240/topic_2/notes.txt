Stack Abstract Data Type (Last In First Out)
    push: adds an Item to the top of the Stack
    pop: removes and reutrns the Item from the top of the Stack
    peek(top): returns but does not remove Item on the top of the Stack
    empty: returns true if the Stack is empty and false otherwise
    clear: empties the Stack

Queue ADT (First In First Out)
    enqueue: adds an Item to the end of the Queue
    dequeue: removes and returns the Item in the front of the queue
    front: returns but does not removes the Item at the front of the Queue
    empty: returns true if the queue is empty and false otherwise
    clear: removes all Items from the Queue

Priority Queue:
    is a queue that maintains a sorted ordering

Deque:
    is a double ended queue

    addFront: adds an Item to the front of the Deque
    addBack: adds an Item to the back of the Deque
    front: returns but does not remove the Item at the front of the Deque
    back: reutrns but does not remove the Item at the back of the Deque
    removeFront: removes and returns the Item at the front of the Deque
    removeBack: removes and returns the Item at the back of the Deque
    empty: returns true if the Deque is empty and false otherwise
    clear: empties the Deque

Linked List
    Node *front;
    Node *back;